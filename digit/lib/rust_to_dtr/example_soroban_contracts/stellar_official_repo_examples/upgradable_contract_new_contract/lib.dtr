[Contract]: UpgradeableContract

[Interface]:
-() [init]
	* Inputs:
	{
		e: Env
		admin: Address
	}
	* Output: Result<(), Error>
	* Instructions:
		$
			{ id: 7, instruction: evaluate, input: (e.storage), assign: METHOD_CALL_EXPRESSION_4, scope: 0 }
			{ id: 8, instruction: evaluate, input: (METHOD_CALL_EXPRESSION_4.instance), assign: METHOD_CALL_EXPRESSION_3, scope: 0 }
			{ id: 9, instruction: evaluate, input: (METHOD_CALL_EXPRESSION_3.has, DataKey::Admin), assign: CONDITIONAL_JUMP_ASSIGNMENT_0, scope: 0 }
			{ id: 11, instruction: jump, input: (CONDITIONAL_JUMP_ASSIGNMENT_0, 10), scope: 0 }
			{ id: 17, instruction: evaluate, input: (Err, Error::AlreadyInitialized), assign: RETURN_VALUE_LABEL_12, scope: 10 }
			{ id: 18, instruction: return, input: (RETURN_VALUE_LABEL_12), scope: 10 }
			{ id: 28, instruction: evaluate, input: (e.storage), assign: METHOD_CALL_EXPRESSION_25, scope: 0 }
			{ id: 29, instruction: evaluate, input: (METHOD_CALL_EXPRESSION_25.instance), assign: METHOD_CALL_EXPRESSION_24, scope: 0 }
			{ id: 30, instruction: evaluate, input: (METHOD_CALL_EXPRESSION_24.set, DataKey::Admin, admin), scope: 0 }
			{ id: 32, instruction: instantiate_object, input: (Tuple), assign: CALL_EXPRESSION_ARG_1_31, scope: 0 }
			{ id: 36, instruction: evaluate, input: (Ok, CALL_EXPRESSION_ARG_1_31), assign: Thing_to_return, scope: 0 }
			{ id: 0, instruction: return, input: (Thing_to_return), scope: 0 }
		$
-() [version]
	* Inputs:
	{
	}
	* Output: Integer
	* Instructions:
		$
			{ id: 0, instruction: return, input: (2), scope: 0 }
		$
-() [new_v2_fn]
	* Inputs:
	{
	}
	* Output: Integer
	* Instructions:
		$
			{ id: 0, instruction: return, input: (1010101), scope: 0 }
		$
-() [upgrade]
	* Inputs:
	{
		e: Env
		new_wasm_hash: ByteStringSmall
	}
	* Instructions:
		$
			{ id: 8, instruction: evaluate, input: (e.storage), assign: METHOD_CALL_EXPRESSION_5, scope: 0 }
			{ id: 9, instruction: evaluate, input: (METHOD_CALL_EXPRESSION_5.instance), assign: METHOD_CALL_EXPRESSION_4, scope: 0 }
			{ id: 10, instruction: evaluate, input: (METHOD_CALL_EXPRESSION_4.get, DataKey::Admin), assign: METHOD_CALL_EXPRESSION_1, scope: 0 }
			{ id: 11, instruction: evaluate, input: (METHOD_CALL_EXPRESSION_1.unwrap), assign: admin|||Address, scope: 0 }
			{ id: 14, instruction: evaluate, input: (admin.require_auth), scope: 0 }
			{ id: 20, instruction: evaluate, input: (e.deployer), assign: METHOD_CALL_EXPRESSION_17, scope: 0 }
			{ id: 21, instruction: evaluate, input: (METHOD_CALL_EXPRESSION_17.update_current_contract_wasm, new_wasm_hash), scope: 0 }
		$
:[Interface]


[User Defined Types]:
* (DataKey_ENUM)
{
	Admin: ()
}

* (Error_ENUM)
{
	AlreadyInitialized = 1
}

:[User Defined Types]

