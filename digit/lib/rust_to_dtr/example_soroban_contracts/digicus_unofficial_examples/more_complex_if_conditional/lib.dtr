[Contract]: MoreComplexIfConditionalContract

[Interface]:
-() [do_a_more_complex_if_conditional]
	* Inputs:
	{
		buy_price: Integer
		sell_price: Integer
	}
	* Instructions:
		$
			{ id: 7, instruction: evaluate, input: (equal_to, buy_price, 0), assign: BINARY_EXPRESSION_LEFT_1, scope: 0 }
			{ id: 12, instruction: evaluate, input: (equal_to, sell_price, 0), assign: BINARY_EXPRESSION_RIGHT_2, scope: 0 }
			{ id: 13, instruction: or, input: (BINARY_EXPRESSION_LEFT_1, BINARY_EXPRESSION_RIGHT_2), assign: CONDITIONAL_JUMP_ASSIGNMENT_0, scope: 0 }
			{ id: 15, instruction: jump, input: (CONDITIONAL_JUMP_ASSIGNMENT_0, 14), scope: 0 }
			{ id: 16, instruction: exit_with_message, input: ("zero price is not allowed"), scope: 14 }
		$
:[Interface]